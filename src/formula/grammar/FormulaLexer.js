// @ts-nocheck
/* eslint-disable */


import antlr4 from "../../../vendor/antlr4-all.js";


const serializedATN = [4,0,61,507,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,1,0,1,0,1,1,1,
1,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,8,3,8,146,
8,8,1,8,1,8,1,8,1,8,5,8,152,8,8,10,8,12,8,155,9,8,1,8,1,8,1,8,1,8,3,8,161,
8,8,1,8,1,8,1,9,3,9,166,8,9,1,9,1,9,1,9,3,9,171,8,9,1,9,5,9,174,8,9,10,9,
12,9,177,9,9,1,9,3,9,180,8,9,1,9,1,9,1,10,5,10,185,8,10,10,10,12,10,188,
9,10,1,10,1,10,5,10,192,8,10,10,10,12,10,195,9,10,4,10,197,8,10,11,10,12,
10,198,1,11,4,11,202,8,11,11,11,12,11,203,1,12,1,12,1,13,1,13,1,13,1,13,
1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,
17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,21,
1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,
23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,
29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,3,30,294,8,30,1,31,1,31,
1,31,1,31,1,32,1,32,1,32,1,32,1,32,3,32,305,8,32,1,33,1,33,1,33,3,33,310,
8,33,1,34,1,34,1,34,1,34,3,34,316,8,34,1,35,1,35,1,36,1,36,1,36,1,37,1,37,
1,38,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,43,1,
43,3,43,340,8,43,1,44,1,44,1,45,1,45,1,45,3,45,347,8,45,1,46,1,46,1,46,3,
46,352,8,46,1,47,1,47,1,48,1,48,1,49,4,49,359,8,49,11,49,12,49,360,1,49,
1,49,3,49,365,8,49,1,49,5,49,368,8,49,10,49,12,49,371,9,49,3,49,373,8,49,
1,50,5,50,376,8,50,10,50,12,50,379,9,50,1,50,1,50,4,50,383,8,50,11,50,12,
50,384,1,50,4,50,388,8,50,11,50,12,50,389,1,50,3,50,393,8,50,1,50,1,50,3,
50,397,8,50,1,50,5,50,400,8,50,10,50,12,50,403,9,50,3,50,405,8,50,1,51,1,
51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,3,51,416,8,51,1,52,1,52,1,52,1,52,
1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,
55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,3,55,
450,8,55,1,56,1,56,5,56,454,8,56,10,56,12,56,457,9,56,1,56,3,56,460,8,56,
1,57,1,57,4,57,464,8,57,11,57,12,57,465,1,57,1,57,1,57,1,57,1,57,4,57,473,
8,57,11,57,12,57,474,1,57,1,57,1,57,3,57,480,8,57,1,58,1,58,1,59,1,59,1,
60,1,60,1,61,1,61,5,61,490,8,61,10,61,12,61,493,9,61,1,61,1,61,1,61,1,61,
1,61,5,61,500,8,61,10,61,12,61,503,9,61,1,61,3,61,506,8,61,4,153,465,474,
491,0,62,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,
51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,
75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,
99,50,101,51,103,52,105,53,107,54,109,55,111,0,113,56,115,57,117,58,119,
59,121,60,123,61,1,0,39,2,0,78,78,110,110,2,0,79,79,111,111,2,0,84,84,116,
116,2,0,10,10,13,13,2,0,87,87,119,119,2,0,72,72,104,104,2,0,73,73,105,105,
2,0,76,76,108,108,2,0,69,69,101,101,2,0,70,70,102,102,2,0,82,82,114,114,
2,0,77,77,109,109,2,0,66,66,98,98,2,0,89,89,121,121,2,0,80,80,112,112,2,
0,83,83,115,115,2,0,85,85,117,117,2,0,67,67,99,99,2,0,68,68,100,100,2,0,
65,65,97,97,2,0,88,88,120,120,2,0,43,43,45,45,2,0,81,81,113,113,16,0,36,
36,162,163,165,165,401,402,1200,1201,1547,1547,3647,3647,6107,6107,8353,
8353,8358,8358,8360,8366,8369,8369,8372,8372,8377,8377,8380,8381,65020,65020,
2,0,75,75,107,107,1,0,268,269,2,0,90,90,122,122,1,0,321,322,2,0,1044,1044,
1076,1076,2,0,1045,1045,1077,1077,2,0,1053,1053,1085,1085,2,0,1048,1048,
1080,1080,2,0,1051,1051,1083,1083,2,0,1042,1042,1074,1074,2,0,65,90,97,122,
4,0,48,57,65,90,95,95,97,122,2,0,91,91,93,93,3,0,9,9,12,12,32,32,1,0,34,
34,550,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,
0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,
0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,
45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,
0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,
0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,
0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,
101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,113,
1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,
0,0,0,1,125,1,0,0,0,3,127,1,0,0,0,5,129,1,0,0,0,7,131,1,0,0,0,9,134,1,0,
0,0,11,136,1,0,0,0,13,138,1,0,0,0,15,142,1,0,0,0,17,145,1,0,0,0,19,165,1,
0,0,0,21,186,1,0,0,0,23,201,1,0,0,0,25,205,1,0,0,0,27,207,1,0,0,0,29,213,
1,0,0,0,31,217,1,0,0,0,33,222,1,0,0,0,35,225,1,0,0,0,37,228,1,0,0,0,39,231,
1,0,0,0,41,236,1,0,0,0,43,239,1,0,0,0,45,244,1,0,0,0,47,249,1,0,0,0,49,258,
1,0,0,0,51,262,1,0,0,0,53,269,1,0,0,0,55,273,1,0,0,0,57,277,1,0,0,0,59,283,
1,0,0,0,61,293,1,0,0,0,63,295,1,0,0,0,65,304,1,0,0,0,67,309,1,0,0,0,69,315,
1,0,0,0,71,317,1,0,0,0,73,319,1,0,0,0,75,322,1,0,0,0,77,324,1,0,0,0,79,327,
1,0,0,0,81,329,1,0,0,0,83,331,1,0,0,0,85,333,1,0,0,0,87,339,1,0,0,0,89,341,
1,0,0,0,91,346,1,0,0,0,93,351,1,0,0,0,95,353,1,0,0,0,97,355,1,0,0,0,99,358,
1,0,0,0,101,392,1,0,0,0,103,415,1,0,0,0,105,417,1,0,0,0,107,421,1,0,0,0,
109,429,1,0,0,0,111,449,1,0,0,0,113,459,1,0,0,0,115,479,1,0,0,0,117,481,
1,0,0,0,119,483,1,0,0,0,121,485,1,0,0,0,123,505,1,0,0,0,125,126,5,40,0,0,
126,2,1,0,0,0,127,128,5,44,0,0,128,4,1,0,0,0,129,130,5,41,0,0,130,6,1,0,
0,0,131,132,5,60,0,0,132,133,5,45,0,0,133,8,1,0,0,0,134,135,5,58,0,0,135,
10,1,0,0,0,136,137,5,33,0,0,137,12,1,0,0,0,138,139,7,0,0,0,139,140,7,1,0,
0,140,141,7,2,0,0,141,14,1,0,0,0,142,143,5,46,0,0,143,16,1,0,0,0,144,146,
3,23,11,0,145,144,1,0,0,0,145,146,1,0,0,0,146,147,1,0,0,0,147,148,5,47,0,
0,148,149,5,42,0,0,149,153,1,0,0,0,150,152,9,0,0,0,151,150,1,0,0,0,152,155,
1,0,0,0,153,154,1,0,0,0,153,151,1,0,0,0,154,156,1,0,0,0,155,153,1,0,0,0,
156,157,5,42,0,0,157,158,5,47,0,0,158,160,1,0,0,0,159,161,3,23,11,0,160,
159,1,0,0,0,160,161,1,0,0,0,161,162,1,0,0,0,162,163,6,8,0,0,163,18,1,0,0,
0,164,166,3,23,11,0,165,164,1,0,0,0,165,166,1,0,0,0,166,170,1,0,0,0,167,
168,5,47,0,0,168,171,5,47,0,0,169,171,5,35,0,0,170,167,1,0,0,0,170,169,1,
0,0,0,171,175,1,0,0,0,172,174,8,3,0,0,173,172,1,0,0,0,174,177,1,0,0,0,175,
173,1,0,0,0,175,176,1,0,0,0,176,179,1,0,0,0,177,175,1,0,0,0,178,180,3,23,
11,0,179,178,1,0,0,0,179,180,1,0,0,0,180,181,1,0,0,0,181,182,6,9,0,0,182,
20,1,0,0,0,183,185,3,121,60,0,184,183,1,0,0,0,185,188,1,0,0,0,186,184,1,
0,0,0,186,187,1,0,0,0,187,196,1,0,0,0,188,186,1,0,0,0,189,193,3,25,12,0,
190,192,3,121,60,0,191,190,1,0,0,0,192,195,1,0,0,0,193,191,1,0,0,0,193,194,
1,0,0,0,194,197,1,0,0,0,195,193,1,0,0,0,196,189,1,0,0,0,197,198,1,0,0,0,
198,196,1,0,0,0,198,199,1,0,0,0,199,22,1,0,0,0,200,202,3,121,60,0,201,200,
1,0,0,0,202,203,1,0,0,0,203,201,1,0,0,0,203,204,1,0,0,0,204,24,1,0,0,0,205,
206,7,3,0,0,206,26,1,0,0,0,207,208,7,4,0,0,208,209,7,5,0,0,209,210,7,6,0,
0,210,211,7,7,0,0,211,212,7,8,0,0,212,28,1,0,0,0,213,214,7,9,0,0,214,215,
7,1,0,0,215,216,7,10,0,0,216,30,1,0,0,0,217,218,7,9,0,0,218,219,7,10,0,0,
219,220,7,1,0,0,220,221,7,11,0,0,221,32,1,0,0,0,222,223,7,6,0,0,223,224,
7,0,0,0,224,34,1,0,0,0,225,226,7,2,0,0,226,227,7,1,0,0,227,36,1,0,0,0,228,
229,7,12,0,0,229,230,7,13,0,0,230,38,1,0,0,0,231,232,7,7,0,0,232,233,7,1,
0,0,233,234,7,1,0,0,234,235,7,14,0,0,235,40,1,0,0,0,236,237,7,6,0,0,237,
238,7,9,0,0,238,42,1,0,0,0,239,240,7,2,0,0,240,241,7,5,0,0,241,242,7,8,0,
0,242,243,7,0,0,0,243,44,1,0,0,0,244,245,7,8,0,0,245,246,7,7,0,0,246,247,
7,15,0,0,247,248,7,8,0,0,248,46,1,0,0,0,249,250,7,9,0,0,250,251,7,16,0,0,
251,252,7,0,0,0,252,253,7,17,0,0,253,254,7,2,0,0,254,255,7,6,0,0,255,256,
7,1,0,0,256,257,7,0,0,0,257,48,1,0,0,0,258,259,7,8,0,0,259,260,7,0,0,0,260,
261,7,18,0,0,261,50,1,0,0,0,262,263,7,10,0,0,263,264,7,8,0,0,264,265,7,2,
0,0,265,266,7,16,0,0,266,267,7,10,0,0,267,268,7,0,0,0,268,52,1,0,0,0,269,
270,7,0,0,0,270,271,7,8,0,0,271,272,7,4,0,0,272,54,1,0,0,0,273,274,7,2,0,
0,274,275,7,10,0,0,275,276,7,13,0,0,276,56,1,0,0,0,277,278,7,17,0,0,278,
279,7,19,0,0,279,280,7,2,0,0,280,281,7,17,0,0,281,282,7,5,0,0,282,58,1,0,
0,0,283,284,7,2,0,0,284,285,7,5,0,0,285,286,7,10,0,0,286,287,7,1,0,0,287,
288,7,4,0,0,288,60,1,0,0,0,289,290,5,124,0,0,290,294,5,124,0,0,291,292,7,
1,0,0,292,294,7,10,0,0,293,289,1,0,0,0,293,291,1,0,0,0,294,62,1,0,0,0,295,
296,7,20,0,0,296,297,7,1,0,0,297,298,7,10,0,0,298,64,1,0,0,0,299,300,5,38,
0,0,300,305,5,38,0,0,301,302,7,19,0,0,302,303,7,0,0,0,303,305,7,18,0,0,304,
299,1,0,0,0,304,301,1,0,0,0,305,66,1,0,0,0,306,310,5,61,0,0,307,308,5,61,
0,0,308,310,5,61,0,0,309,306,1,0,0,0,309,307,1,0,0,0,310,68,1,0,0,0,311,
312,5,33,0,0,312,316,5,61,0,0,313,314,5,60,0,0,314,316,5,62,0,0,315,311,
1,0,0,0,315,313,1,0,0,0,316,70,1,0,0,0,317,318,5,60,0,0,318,72,1,0,0,0,319,
320,5,60,0,0,320,321,5,61,0,0,321,74,1,0,0,0,322,323,5,62,0,0,323,76,1,0,
0,0,324,325,5,62,0,0,325,326,5,61,0,0,326,78,1,0,0,0,327,328,5,43,0,0,328,
80,1,0,0,0,329,330,5,45,0,0,330,82,1,0,0,0,331,332,5,42,0,0,332,84,1,0,0,
0,333,334,5,47,0,0,334,86,1,0,0,0,335,340,5,37,0,0,336,337,7,11,0,0,337,
338,7,1,0,0,338,340,7,18,0,0,339,335,1,0,0,0,339,336,1,0,0,0,340,88,1,0,
0,0,341,342,5,94,0,0,342,90,1,0,0,0,343,347,5,171,0,0,344,345,5,60,0,0,345,
347,5,60,0,0,346,343,1,0,0,0,346,344,1,0,0,0,347,92,1,0,0,0,348,352,5,187,
0,0,349,350,5,62,0,0,350,352,5,62,0,0,351,348,1,0,0,0,351,349,1,0,0,0,352,
94,1,0,0,0,353,354,5,123,0,0,354,96,1,0,0,0,355,356,5,125,0,0,356,98,1,0,
0,0,357,359,2,48,57,0,358,357,1,0,0,0,359,360,1,0,0,0,360,358,1,0,0,0,360,
361,1,0,0,0,361,372,1,0,0,0,362,364,7,8,0,0,363,365,7,21,0,0,364,363,1,0,
0,0,364,365,1,0,0,0,365,369,1,0,0,0,366,368,2,48,57,0,367,366,1,0,0,0,368,
371,1,0,0,0,369,367,1,0,0,0,369,370,1,0,0,0,370,373,1,0,0,0,371,369,1,0,
0,0,372,362,1,0,0,0,372,373,1,0,0,0,373,100,1,0,0,0,374,376,2,48,57,0,375,
374,1,0,0,0,376,379,1,0,0,0,377,375,1,0,0,0,377,378,1,0,0,0,378,380,1,0,
0,0,379,377,1,0,0,0,380,382,5,46,0,0,381,383,2,48,57,0,382,381,1,0,0,0,383,
384,1,0,0,0,384,382,1,0,0,0,384,385,1,0,0,0,385,393,1,0,0,0,386,388,2,48,
57,0,387,386,1,0,0,0,388,389,1,0,0,0,389,387,1,0,0,0,389,390,1,0,0,0,390,
391,1,0,0,0,391,393,5,46,0,0,392,377,1,0,0,0,392,387,1,0,0,0,393,404,1,0,
0,0,394,396,7,8,0,0,395,397,7,21,0,0,396,395,1,0,0,0,396,397,1,0,0,0,397,
401,1,0,0,0,398,400,2,48,57,0,399,398,1,0,0,0,400,403,1,0,0,0,401,399,1,
0,0,0,401,402,1,0,0,0,402,405,1,0,0,0,403,401,1,0,0,0,404,394,1,0,0,0,404,
405,1,0,0,0,405,102,1,0,0,0,406,407,7,2,0,0,407,408,7,10,0,0,408,409,7,16,
0,0,409,416,7,8,0,0,410,411,7,9,0,0,411,412,7,19,0,0,412,413,7,7,0,0,413,
414,7,15,0,0,414,416,7,8,0,0,415,406,1,0,0,0,415,410,1,0,0,0,416,104,1,0,
0,0,417,418,7,14,0,0,418,419,7,8,0,0,419,420,7,10,0,0,420,106,1,0,0,0,421,
422,7,15,0,0,422,423,7,22,0,0,423,424,7,16,0,0,424,425,7,19,0,0,425,426,
7,10,0,0,426,427,7,8,0,0,427,428,7,18,0,0,428,108,1,0,0,0,429,430,7,17,0,
0,430,431,7,16,0,0,431,432,7,12,0,0,432,433,7,8,0,0,433,434,7,18,0,0,434,
110,1,0,0,0,435,450,7,23,0,0,436,437,7,24,0,0,437,450,7,25,0,0,438,439,7,
26,0,0,439,450,7,27,0,0,440,441,7,28,0,0,441,442,7,29,0,0,442,450,7,30,0,
0,443,444,7,28,0,0,444,445,7,31,0,0,445,450,7,30,0,0,446,447,7,32,0,0,447,
450,7,33,0,0,448,450,5,8378,0,0,449,435,1,0,0,0,449,436,1,0,0,0,449,438,
1,0,0,0,449,440,1,0,0,0,449,443,1,0,0,0,449,446,1,0,0,0,449,448,1,0,0,0,
450,112,1,0,0,0,451,455,7,34,0,0,452,454,7,35,0,0,453,452,1,0,0,0,454,457,
1,0,0,0,455,453,1,0,0,0,455,456,1,0,0,0,456,460,1,0,0,0,457,455,1,0,0,0,
458,460,3,111,55,0,459,451,1,0,0,0,459,458,1,0,0,0,460,114,1,0,0,0,461,463,
3,117,58,0,462,464,8,36,0,0,463,462,1,0,0,0,464,465,1,0,0,0,465,466,1,0,
0,0,465,463,1,0,0,0,466,467,1,0,0,0,467,468,3,119,59,0,468,480,1,0,0,0,469,
470,3,117,58,0,470,472,3,117,58,0,471,473,8,36,0,0,472,471,1,0,0,0,473,474,
1,0,0,0,474,475,1,0,0,0,474,472,1,0,0,0,475,476,1,0,0,0,476,477,3,119,59,
0,477,478,3,119,59,0,478,480,1,0,0,0,479,461,1,0,0,0,479,469,1,0,0,0,480,
116,1,0,0,0,481,482,5,91,0,0,482,118,1,0,0,0,483,484,5,93,0,0,484,120,1,
0,0,0,485,486,7,37,0,0,486,122,1,0,0,0,487,491,5,39,0,0,488,490,9,0,0,0,
489,488,1,0,0,0,490,493,1,0,0,0,491,492,1,0,0,0,491,489,1,0,0,0,492,494,
1,0,0,0,493,491,1,0,0,0,494,506,5,39,0,0,495,501,5,34,0,0,496,497,5,92,0,
0,497,500,5,34,0,0,498,500,8,38,0,0,499,496,1,0,0,0,499,498,1,0,0,0,500,
503,1,0,0,0,501,499,1,0,0,0,501,502,1,0,0,0,502,504,1,0,0,0,503,501,1,0,
0,0,504,506,5,34,0,0,505,487,1,0,0,0,505,495,1,0,0,0,506,124,1,0,0,0,41,
0,145,153,160,165,170,175,179,186,193,198,203,293,304,309,315,339,346,351,
360,364,369,372,377,384,389,392,396,401,404,415,449,455,459,465,474,479,
491,499,501,505,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class FormulaLexer extends antlr4.Lexer {

    static grammarFileName = "Formula.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'('", "','", "')'", "'<-'", "':'", "'!'",
                         "'not'", "'.'", null, null, null, null, null, "'while'",
                         "'for'", "'from'", "'in'", "'to'", "'by'", "'loop'",
                         "'if'", "'then'", "'else'", "'function'", "'end'",
                         "'return'", "'new'", "'try'", "'catch'", "'throw'",
                         null, "'xor'", null, null, null, "'<'", "'<='",
                         "'>'", "'>='", "'+'", "'-'", "'*'", "'/'", null,
                         "'^'", null, null, "'{'", "'}'", null, null, null,
                         "'per'", "'squared'", "'cubed'", null, null, "'['",
                         "']'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null,
                          null, "COMMENT", "LINE_COMMENT", "R__", "R_",
                          "NEWLINES", "WHILESTATEMENT", "FORSTATEMENT",
                          "FROMSTATEMENT", "INSTATEMENT", "TOSTATEMENT",
                          "BYSTATEMENT", "LOOPSTATEMENT", "IFSTATEMENT",
                          "THENSTATEMENT", "ELSESTATEMENT", "FUNCTIONSTATEMENT",
                          "ENDBLOCK", "RETURNSTATEMENT", "NEWSTATEMENT",
                          "TRYSTATEMENT", "CATCHSTATEMENT", "THROWSTATEMENT",
                          "OR", "XOR", "AND", "EQUALS", "NOTEQUALS", "LT",
                          "LTEQ", "GT", "GTEQ", "PLUS", "MINUS", "MULT",
                          "DIV", "MOD", "POW", "LARR", "RARR", "LCURL",
                          "RCURL", "INTEGER", "FLOAT", "BOOL", "PER", "SQUARED",
                          "CUBED", "IDENT", "PRIMITIVE", "LBRACKET", "RBRACKET",
                          "SPACE", "STRING" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6",
                      "T__7", "COMMENT", "LINE_COMMENT", "R__", "R_", "NEWLINES",
                      "WHILESTATEMENT", "FORSTATEMENT", "FROMSTATEMENT",
                      "INSTATEMENT", "TOSTATEMENT", "BYSTATEMENT", "LOOPSTATEMENT",
                      "IFSTATEMENT", "THENSTATEMENT", "ELSESTATEMENT", "FUNCTIONSTATEMENT",
                      "ENDBLOCK", "RETURNSTATEMENT", "NEWSTATEMENT", "TRYSTATEMENT",
                      "CATCHSTATEMENT", "THROWSTATEMENT", "OR", "XOR", "AND",
                      "EQUALS", "NOTEQUALS", "LT", "LTEQ", "GT", "GTEQ",
                      "PLUS", "MINUS", "MULT", "DIV", "MOD", "POW", "LARR",
                      "RARR", "LCURL", "RCURL", "INTEGER", "FLOAT", "BOOL",
                      "PER", "SQUARED", "CUBED", "CURRENCY_SYMBOLS", "IDENT",
                      "PRIMITIVE", "LBRACKET", "RBRACKET", "SPACE", "STRING" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

FormulaLexer.EOF = antlr4.Token.EOF;
FormulaLexer.T__0 = 1;
FormulaLexer.T__1 = 2;
FormulaLexer.T__2 = 3;
FormulaLexer.T__3 = 4;
FormulaLexer.T__4 = 5;
FormulaLexer.T__5 = 6;
FormulaLexer.T__6 = 7;
FormulaLexer.T__7 = 8;
FormulaLexer.COMMENT = 9;
FormulaLexer.LINE_COMMENT = 10;
FormulaLexer.R__ = 11;
FormulaLexer.R_ = 12;
FormulaLexer.NEWLINES = 13;
FormulaLexer.WHILESTATEMENT = 14;
FormulaLexer.FORSTATEMENT = 15;
FormulaLexer.FROMSTATEMENT = 16;
FormulaLexer.INSTATEMENT = 17;
FormulaLexer.TOSTATEMENT = 18;
FormulaLexer.BYSTATEMENT = 19;
FormulaLexer.LOOPSTATEMENT = 20;
FormulaLexer.IFSTATEMENT = 21;
FormulaLexer.THENSTATEMENT = 22;
FormulaLexer.ELSESTATEMENT = 23;
FormulaLexer.FUNCTIONSTATEMENT = 24;
FormulaLexer.ENDBLOCK = 25;
FormulaLexer.RETURNSTATEMENT = 26;
FormulaLexer.NEWSTATEMENT = 27;
FormulaLexer.TRYSTATEMENT = 28;
FormulaLexer.CATCHSTATEMENT = 29;
FormulaLexer.THROWSTATEMENT = 30;
FormulaLexer.OR = 31;
FormulaLexer.XOR = 32;
FormulaLexer.AND = 33;
FormulaLexer.EQUALS = 34;
FormulaLexer.NOTEQUALS = 35;
FormulaLexer.LT = 36;
FormulaLexer.LTEQ = 37;
FormulaLexer.GT = 38;
FormulaLexer.GTEQ = 39;
FormulaLexer.PLUS = 40;
FormulaLexer.MINUS = 41;
FormulaLexer.MULT = 42;
FormulaLexer.DIV = 43;
FormulaLexer.MOD = 44;
FormulaLexer.POW = 45;
FormulaLexer.LARR = 46;
FormulaLexer.RARR = 47;
FormulaLexer.LCURL = 48;
FormulaLexer.RCURL = 49;
FormulaLexer.INTEGER = 50;
FormulaLexer.FLOAT = 51;
FormulaLexer.BOOL = 52;
FormulaLexer.PER = 53;
FormulaLexer.SQUARED = 54;
FormulaLexer.CUBED = 55;
FormulaLexer.IDENT = 56;
FormulaLexer.PRIMITIVE = 57;
FormulaLexer.LBRACKET = 58;
FormulaLexer.RBRACKET = 59;
FormulaLexer.SPACE = 60;
FormulaLexer.STRING = 61;
